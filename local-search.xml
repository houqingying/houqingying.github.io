<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【超分辨率】SRCNN-利用深度卷积网络实现图像超分辨率</title>
    <link href="/2022/10/01/%E3%80%90%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%91SRCNN/"/>
    <url>/2022/10/01/%E3%80%90%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%91SRCNN/</url>
    
    <content type="html"><![CDATA[<h2 id="0-摘要"><a href="#0-摘要" class="headerlink" title="0 摘要"></a>0 摘要</h2><p>低分辨率到高分辨率的端到端映射的CNN</p><ul><li>轻量级结构</li><li>目前最好的恢复质量</li><li>快速在线使用的速度</li><li>可以处理3个颜色通道</li></ul><p><img src="/2022/10/01/%E3%80%90%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%91SRCNN/%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%9C.jpeg" alt="模型结果"></p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h2><p>单图像超分辨率(SISR)是一个ill-posed(不适定)的问题，解不是唯一的,这类问题通常通过比较强的先验信息约束解空间来缓解。</p><p>最近最先进的方法大多采用基于示例(example-based)的策略，可以设计通用的或特定领域的超分辨率方法：</p><ul><li>利用相同图像的内部相似性</li><li>学习低分辨率和高分辨率的映射函数</li></ul><p>考虑使用卷积神经网络直接学习LR和SR之间的端到端映射，提出SRCNN：</p><ul><li><strong>结构简单</strong>，但与最先进的基于实例的方法相比，提供了更高的准确性。</li><li>快，通过适当的filter和layers，实现了<strong>快速的在线实际使用</strong>。</li><li>使用更大、更多样的数据集 &amp; 使用更大、更深入的模型时，网络的恢复质量可以进一步提高</li></ul><h2 id="2-理论"><a href="#2-理论" class="headerlink" title="2 理论"></a>2 理论</h2><p>插值方法：</p><ul><li>最近邻插值</li><li>双线性插值（周围4个点决定该点像素值）</li><li>双三次插值（周围十六个像素值决定该点像素值）</li></ul><p>唯一要做的<strong>预处理</strong>：把低分辨率图像使用双三次插值升级到需要的尺寸，得到图片Y，目标为恢复出高分辨率的F(Y)，设真实高分辨率图像为X。</p><img src="/2022/10/01/%E3%80%90%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%91SRCNN/SRCNN网络结构.jpeg" alt="SRCNN网络结构" style="zoom: 50%;"><img src="/2022/10/01/%E3%80%90%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%91SRCNN/SRCNN网络说明.jpeg" alt="SRCNN网络说明" style="zoom: 50%;"><p>学习F，F做了3件事：</p><ul><li><p><strong>Patch提取与表示</strong>：从Y中提取patch，把每个patch表示为一个高维向量。这些向量包括一组特征图，其数量等于向量的维数。<br>$$<br>F_1(Y)&#x3D;max(W_1*Y + B_1)<br>$$</p></li><li></li><li><p>$W_1$为滤波器，$*$为卷积运算，$B_1$为偏差，$n_1$个$kernel$大小为$f_1$的filter，输出由$n_1$个特征映射而成。</p></li><li><p><strong>非线性映射</strong>：将一个高维向量映射到另一个高维向量，将$n_1$维的向量通过逐点卷积映射为$n_2$维向量</p></li><li><p><strong>重建</strong>：聚合上述高分辨率的patch级表示</p></li></ul><p>$$<br>F(Y)&#x3D;W_3*F_2(Y) + B_3<br>$$</p><p>代码中的参数：$f_1 &#x3D; 9, f_2 &#x3D; 1, f_3 &#x3D; 5, n_1 &#x3D; 64,n_2 &#x3D; 32$</p><p>根据作者使用的参数,网络可以表示为 Conv(9，64，1) - ReLU - Conv(1，32，64) - ReLU -Conv(5，1，32)</p><img src="/2022/10/01/%E3%80%90%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E3%80%91SRCNN/代码实现.png" alt="代码实现" style="zoom: 67%;"> ]]></content>
    
    
    
    <tags>
      
      <tag>论文</tag>
      
      <tag>超分辨率</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【气象降尺度】2017-DeepSD:通过SR生成高分辨率气候变化预测-Thomas-KDD</title>
    <link href="/2022/10/01/%E3%80%90%E6%B0%94%E8%B1%A1%E9%99%8D%E5%B0%BA%E5%BA%A6%E3%80%912017-DeepSD-Thomas/"/>
    <url>/2022/10/01/%E3%80%90%E6%B0%94%E8%B1%A1%E9%99%8D%E5%B0%BA%E5%BA%A6%E3%80%912017-DeepSD-Thomas/</url>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>地球系统模型ESM(Earth System Models)在空间分辨率上过于粗糙，本文提出了一个通用的堆叠SRCNN网络DeepSD用于气候变量的统计降尺度。</p><p>DeepSD对SRCNN进行了补充，使用了多尺度的输入通道(?)。</p><p>与偏差校正空间分解等四种统计降尺度方法进行比较，将美国大陆的日降水量从1°(100km)降至1&#x2F;8°(12.5km)。</p><p>文章中还讨论了一个使用NASA Earth Exchange(NEX)的框架，对具有多种排放场景的20多个ESM进行降尺度。</p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h2><p>气候对农业、交通、能源、人类安全等都有很大影响。地球系统模型(ESMs)是在大型超级计算机上运行的基于物理的数值模型，用于预测地球对大气温室气体排放情景变化的响应。</p><p>ESM的输出是许多学科用于研究气候变化的主要数据产品，提供了温度、降水、风、湿度、压力等大量气候变量。</p><p>但是ESM在计算上的要求使得其空间分辨率限制在1°到3°以内，这样的分辨率太过粗糙，无法解决关键的物理过程，也无法评估这些气候变量造成的局部本地影响。</p><p>传统降尺度方法：</p><ul><li>动态降尺度(区域气候模型RCM)划分更小的网格</li><li>统计降尺度(Statistical Downscaling,SD)通过统计学习&#x2F;机器学习方法，学习了一种函数形式，通过合并观测数据，把ESM从低分辨率映射到高分辨率</li></ul><p>目前还不知道有任何SD方法能够明确地捕获低分辨率和高分辨率气候数据中的空间依赖性。且传统方法需要高分辨率的观测数据，这是观测数据很少的贫穷地区难以获取的。而超分辨率问题(SR)和统计降尺度问题(SD)具有很大的相似性。</p><p>最后，结合本文的超分辨率方法、利用NASA的地球交换(NEX)平台，本文提出了一个框架，对美国大陆（CONUS）的四种排放情景，在每日时间尺度上进行低尺度的地球系统模型（ESMs）集成。</p><blockquote><p>NEX-DCP30 数据集由美国本土的downscale气候情景组成，这些情景源自在CMIP5下进行的大气环流模式 (GCM) 和IPCC第五次评估报告制定的四种温室气体排放情景，称为代表性浓度路径(RCP)。这些数据集的目的是提供一组高分辨率、偏差校正的气候变化预测，可用于评估气候变化对更细尺度气候梯度敏感过程的影响以及局部地形对气候条件的影响。该数据集包含涵盖 1950 年至 2005 年（回顾性运行）和 2006 年至 2099 年（预期运行）期间的月度预测。</p></blockquote><p>DeepSD：SOTA、可迁移、提供生成高分辨率的降尺度产品的新思路。</p><h2 id="2-地球科学数据"><a href="#2-地球科学数据" class="headerlink" title="2 地球科学数据"></a>2 地球科学数据</h2><p>地球科学数据来自各种领域，比如气候模拟、遥感数据和气象站观测。</p><p>这类数据的时空性质给计算和存储带来了巨大的挑战(需要的存储量大)，并且分析这些复杂的数据集需要专业的技术和知识.</p><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><table><thead><tr><th>单词</th><th>中文</th></tr></thead><tbody><tr><td>coarse</td><td>粗糙的</td></tr><tr><td>archive</td><td>档案</td></tr><tr><td>archived</td><td>已归档的、存档的</td></tr><tr><td>principal</td><td>最重要的、首要的</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>论文</tag>
      
      <tag>气象降尺度</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【气象降尺度】2019-基于深度学习图像超分辨率的气象数据空间降尺度-茅志仁-武汉大学</title>
    <link href="/2022/10/01/%E3%80%90%E6%B0%94%E8%B1%A1%E9%99%8D%E5%B0%BA%E5%BA%A6%E3%80%912019-%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%9B%BE%E5%83%8F%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E7%9A%84%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%A9%BA%E9%97%B4%E9%99%8D%E5%B0%BA%E5%BA%A6-%E8%8C%85%E5%BF%97%E4%BB%81-%E6%AD%A6%E6%B1%89%E5%A4%A7%E5%AD%A6/"/>
    <url>/2022/10/01/%E3%80%90%E6%B0%94%E8%B1%A1%E9%99%8D%E5%B0%BA%E5%BA%A6%E3%80%912019-%E5%9F%BA%E4%BA%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%9B%BE%E5%83%8F%E8%B6%85%E5%88%86%E8%BE%A8%E7%8E%87%E7%9A%84%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%A9%BA%E9%97%B4%E9%99%8D%E5%B0%BA%E5%BA%A6-%E8%8C%85%E5%BF%97%E4%BB%81-%E6%AD%A6%E6%B1%89%E5%A4%A7%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="0-摘要"><a href="#0-摘要" class="headerlink" title="0 摘要"></a>0 摘要</h2><p>降水数据反映到图像领域即为降水分布图；图像领域与数值降尺度类似的一个分支为图像超分辨率(SR).</p><p>DeepSD：收敛慢(不同类别气象数据训练时间成本高)、网络结构浅、插值预处理引入人为误差&amp;增加计算复杂度.</p><p>本文：提出VDSD(20层+) &amp; ResSD(60层+) &amp; ResSD+(100层+)；利用了残差学习，网络收敛有提升；去除插值预处理，通过<strong>反卷积上采样</strong>实现超分辨率重建，减小计算复杂度；将超分辨率网络模块化。</p><p>通过和气象局公共气象服务中心合作，本文以深度学习SR方法为基础，将其迁移到气象数据空间降尺度的研究上。</p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h2><p><strong>动力降尺度：</strong>区域气候模型，利用全球气候模型提供的初始条件和边界，推测出高分辨率的气候变化。</p><p><strong>统计降尺度：</strong>对大尺度变量（如大气表面压力）和局部变量（如特定地点的风速）之间的观测建立统计关系，并检验这种关系的合理性，然后把这种关系应用于全球气候模型（GCMs）的数据，从全球气候模型（GCMs）的输出获取局部变量。</p><p>古早技术：2007年，“偏差校正空间分解”（BCSD）</p><p>DeepSD：将静态高分辨率的地形数据和低分辨率的气象数据结合起来，以缓解不适定问题。</p><p>介绍了SRCNN \ VDSR \ ESPCN\ LapSRN \ SRGAN \ ESRGAN</p><p>降水模式有NCEP[8]，RJTD，EC，GRAPES_MESO，NMC[11]，空间分辨率分别为25公里、25公里、12.5公里、10公里、5公里。</p>]]></content>
    
    
    
    <tags>
      
      <tag>论文</tag>
      
      <tag>气象降尺度</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux/Windows下使用Anaconda安装Pytorch</title>
    <link href="/2022/09/29/%E4%BD%BF%E7%94%A8Anaconda%E5%AE%89%E8%A3%85Pytorch/"/>
    <url>/2022/09/29/%E4%BD%BF%E7%94%A8Anaconda%E5%AE%89%E8%A3%85Pytorch/</url>
    
    <content type="html"><![CDATA[<p>情况:已安装Anaconda.</p><h2 id="1-Pytorch的安装"><a href="#1-Pytorch的安装" class="headerlink" title="1 Pytorch的安装"></a>1 Pytorch的安装</h2><p>首先为加快下载速度将Anaconda源换为清华源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/<br>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/<br>conda config --<span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>可以使用以下命令查看Anaconda源的地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --show-sources<br></code></pre></td></tr></table></figure><p>由于不同的程序可能需要不同的环境，故首先创建一个新的虚拟环境(pytorch是这个环境的名字，可以自由设置)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n pytorch python=3.9<br></code></pre></td></tr></table></figure><p>切换到虚拟环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate pytorch<br></code></pre></td></tr></table></figure><p>查看CUDA版本:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nvcc --version<br></code></pre></td></tr></table></figure><p><img src="/2022/09/29/%E4%BD%BF%E7%94%A8Anaconda%E5%AE%89%E8%A3%85Pytorch/CUDA%E7%89%88%E6%9C%AC.png" alt="CUDA版本"></p><p>显示CUDA版本为11.2，到<a href="https://pytorch.org/get-started/previous-versions/">Pytorch官网</a>[CTRL+F]找一下对应的命令，似乎没有11.2版本，为保证兼容性，故用版本稍低的11.1：</p><p><img src="/2022/09/29/%E4%BD%BF%E7%94%A8Anaconda%E5%AE%89%E8%A3%85Pytorch/Pytorch%E7%89%88%E6%9C%AC.png" alt="Pytorch版本"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install pytorch==1.8.0 torchvision==0.9.0 torchaudio==0.8.0 cudatoolkit=11.1 -c pytorch -c conda-forge<br></code></pre></td></tr></table></figure><p>主要是pytorch和cudatoolkit这两个包下载过程有些慢，稍等一会儿就安装完成啦~ (●’◡’●)</p><h2 id="2-其他库的安装（根据需要"><a href="#2-其他库的安装（根据需要" class="headerlink" title="2 其他库的安装（根据需要"></a>2 其他库的安装（根据需要</h2><p>机器学习基础库：scikit-learn、pandas、seaborn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install scikit-learn<br>conda install pandas<br>conda  install seaborn<br></code></pre></td></tr></table></figure><p>进度条库tqdm:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c conda-forge tqdm<br></code></pre></td></tr></table></figure><p>tensorboardX：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c conda-forge tensorboardx <br></code></pre></td></tr></table></figure><p>查看安装库的情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda list<br></code></pre></td></tr></table></figure><h2 id="3-使用Pycharm远程连接服务器"><a href="#3-使用Pycharm远程连接服务器" class="headerlink" title="3 使用Pycharm远程连接服务器"></a>3 使用Pycharm远程连接服务器</h2><p>看这篇：<a href="http://t.csdn.cn/9Pu6J">http://t.csdn.cn/9Pu6J</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
